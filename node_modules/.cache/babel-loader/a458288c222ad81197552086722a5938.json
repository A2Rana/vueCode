{"remainingRequest":"/home/arana/Documents/vueCode/Vue/fbc/node_modules/babel-loader/lib/index.js!/home/arana/Documents/vueCode/Vue/fbc/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/arana/Documents/vueCode/Vue/fbc/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/arana/Documents/vueCode/Vue/fbc/src/views/Overheads/viewOverhead.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/arana/Documents/vueCode/Vue/fbc/src/views/Overheads/viewOverhead.vue","mtime":1616495000255},{"path":"/home/arana/Documents/vueCode/Vue/fbc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/arana/Documents/vueCode/Vue/fbc/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/arana/Documents/vueCode/Vue/fbc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/arana/Documents/vueCode/Vue/fbc/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2FyYW5hL0RvY3VtZW50cy92dWVDb2RlL1Z1ZS9mYmMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudmFsdWVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKaW1wb3J0IFRhYmxlIGZyb20gJ0AvY29tcG9uZW50cy9UYWJsZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnVmlld092ZXJoZWFkJywKICBjb21wb25lbnRzOiB7CiAgICBUYWJsZTogVGFibGUKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkYXRhOiBbXSwKICAgICAgdGFibGVIZWFkZXJzOiBbXSwKICAgICAgb3ZlcmhlYWROYW1lOiAnJywKICAgICAgeWVhcjogJycsCiAgICAgIG1zZzogJ0ZpbHRlciBleHBlbnNlcyBhY2NvcmRpbmcgdG8gb3ZlcmhlYWQ6JywKICAgICAgbWVzc2FnZTogJ0VudGVyIE92ZXJoZWFkIE5hbWUnLAogICAgICB1cmw6ICdodHRwczovL2ZiYy5leGl0ZXN0LmNvbS9vdmVyaGVhZCcKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXREYXRhOiBmdW5jdGlvbiBnZXREYXRhKHVybCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciByZXNwb25zZSwgZGF0YTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCh1cmwpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5vaykgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBkYXRhKTsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIGNvbnNvbGUubG9nKCdIVFRQLUVycm9yOiAnICsgcmVzcG9uc2Uuc3RhdHVzKSk7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZ2V0RmFjaWxpdHk6IGZ1bmN0aW9uIGdldEZhY2lsaXR5KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF90aGlzLm92ZXJoZWFkTmFtZSwgX3RoaXMueWVhcik7CiAgICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBPYmplY3Q7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuZ2V0RGF0YSgiIi5jb25jYXQoX3RoaXMudXJsLCAiL2ZhY2lsaXR5PSIpLmNvbmNhdChfdGhpcy5vdmVyaGVhZE5hbWUsICIvZXhwZW5zZS8iKS5jb25jYXQoX3RoaXMueWVhcikpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICBfY29udGV4dDIudDEgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIF90aGlzLmRhdGEgPSBfY29udGV4dDIudDAudmFsdWVzLmNhbGwoX2NvbnRleHQyLnQwLCBfY29udGV4dDIudDEpOwoKICAgICAgICAgICAgICAgIGlmIChfdGhpcy5kYXRhLmxlbmd0aCkgewogICAgICAgICAgICAgICAgICBfdGhpcy50YWJsZUhlYWRlcnMgPSBPYmplY3Qua2V5cyhfdGhpcy5kYXRhWzBdKTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIF90aGlzLnRhYmxlSGVhZGVycyA9IFsnRGF0YSBpcyBub3QgcHJlc2VudCEnXTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQzLnQwID0gT2JqZWN0OwogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMyLmdldERhdGEoX3RoaXMyLnVybCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgX2NvbnRleHQzLnQxID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgX3RoaXMyLmRhdGEgPSBfY29udGV4dDMudDAudmFsdWVzLmNhbGwoX2NvbnRleHQzLnQwLCBfY29udGV4dDMudDEpOwoKICAgICAgICAgICAgICBpZiAoX3RoaXMyLmRhdGEubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICBfdGhpczIudGFibGVIZWFkZXJzID0gT2JqZWN0LmtleXMoX3RoaXMyLmRhdGFbMF0pOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBfdGhpczIudGFibGVIZWFkZXJzID0gWydEYXRhIGlzIG5vdCBwcmVzZW50ISddOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUzKTsKICAgIH0pKSgpOwogIH0KfTs="},{"version":3,"sources":["/home/arana/Documents/vueCode/Vue/fbc/src/views/Overheads/viewOverhead.vue"],"names":[],"mappings":";;;;;;;AASA,OAAO,KAAP,MAAkB,oBAAlB;AAEA,eAAe;AACX,EAAA,IAAI,EAAE,cADK;AAEX,EAAA,UAAU,EAAE;AACR,IAAA,KAAK,EAAL;AADQ,GAFD;AAKX,EAAA,IALW,kBAKJ;AACH,WAAO;AACH,MAAA,IAAI,EAAE,EADH;AAEH,MAAA,YAAY,EAAE,EAFX;AAGH,MAAA,YAAY,EAAE,EAHX;AAIH,MAAA,IAAI,EAAE,EAJH;AAKH,MAAA,GAAG,EAAE,wCALF;AAMH,MAAA,OAAO,EAAE,qBANN;AAOH,MAAA,GAAG,EAAE;AAPF,KAAP;AASH,GAfU;AAgBX,EAAA,OAAO,EAAE;AACC,IAAA,OADD,mBACS,GADT,EACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACQ,KAAK,CAAC,GAAD,CADb;;AAAA;AACT,gBAAA,QADS;;AAAA,qBAEX,QAAQ,CAAC,EAFE;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAGQ,QAAQ,CAAC,IAAT,EAHR;;AAAA;AAGL,gBAAA,IAHK;AAAA,iDAIJ,IAJI;;AAAA;AAAA,iDAMJ,OAAO,CAAC,GAAR,CAAY,iBAAiB,QAAQ,CAAC,MAAtC,CANI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQlB,KATI;AAWC,IAAA,WAXD,yBAWe;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAChB,gBAAA,OAAO,CAAC,GAAR,CAAY,KAAI,CAAC,YAAjB,EAA+B,KAAI,CAAC,IAApC;AADgB,+BAEJ,MAFI;AAAA;AAAA,uBAEgB,KAAI,CAAC,OAAL,WAAgB,KAAI,CAAC,GAArB,uBAAqC,KAAI,CAAC,YAA1C,sBAAkE,KAAI,CAAC,IAAvE,EAFhB;;AAAA;AAAA;AAEhB,gBAAA,KAAI,CAAC,IAFW,gBAEG,MAFH;;AAGhB,oBAAI,KAAI,CAAC,IAAL,CAAU,MAAd,EAAsB;AAClB,kBAAA,KAAI,CAAC,YAAL,GAAoB,MAAM,CAAC,IAAP,CAAY,KAAI,CAAC,IAAL,CAAU,CAAV,CAAZ,CAApB;AACJ,iBAFA,MAEO;AACH,kBAAA,KAAI,CAAC,YAAL,GAAoB,CAAC,sBAAD,CAApB;AACJ;;AAPgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQnB;AAnBI,GAhBE;AAqCL,EAAA,OArCK,qBAqCK;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACA,MADA;AAAA;AAAA,qBACoB,MAAI,CAAC,OAAL,CAAa,MAAI,CAAC,GAAlB,CADpB;;AAAA;AAAA;AACZ,cAAA,MAAI,CAAC,IADO,gBACO,MADP;;AAEZ,kBAAI,MAAI,CAAC,IAAL,CAAU,MAAd,EAAsB;AAClB,gBAAA,MAAI,CAAC,YAAL,GAAoB,MAAM,CAAC,IAAP,CAAY,MAAI,CAAC,IAAL,CAAU,CAAV,CAAZ,CAApB;AACJ,eAFA,MAEO;AACH,gBAAA,MAAI,CAAC,YAAL,GAAoB,CAAC,sBAAD,CAApB;AACJ;;AANY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOf;AA5CU,CAAf","sourcesContent":["<template>\n    <Table v-bind:tableHeaders=\"tableHeaders\" v-bind:data=\"data\"></Table>\n    <h2 for=\"Overhead\">{{ msg }}</h2>\n    <input v-model=\"overheadName\" :placeholder=\"message\" /> <br />\n    <input v-model=\"year\" placeholder=\"Enter the year...\" />\n    <button @click=\"getFacility()\">Go!!!</button>\n</template>\n\n<script>\nimport Table from '@/components/Table';\n\nexport default {\n    name: 'ViewOverhead',\n    components: {\n        Table,\n    },\n    data() {\n        return {\n            data: [],\n            tableHeaders: [],\n            overheadName: '',\n            year: '',\n            msg: 'Filter expenses according to overhead:',\n            message: 'Enter Overhead Name',\n            url: 'https://fbc.exitest.com/overhead',\n        };\n    },\n    methods: {\n        async getData(url) {\n            const response = await fetch(url);\n            if (response.ok) {\n                const data = await response.json();\n                return data;\n            } else {\n                return console.log('HTTP-Error: ' + response.status);\n            }\n        },\n\n        async getFacility() {\n            console.log(this.overheadName, this.year);\n            this.data = Object.values(await this.getData(`${this.url}/facility=${this.overheadName}/expense/${this.year}`));\n            if (this.data.length) {\n                this.tableHeaders = Object.keys(this.data[0]);\n            } else {\n                this.tableHeaders = ['Data is not present!'];\n            }\n        },\n    },\n    async mounted() {\n        this.data = Object.values(await this.getData(this.url));\n        if (this.data.length) {\n            this.tableHeaders = Object.keys(this.data[0]);\n        } else {\n            this.tableHeaders = ['Data is not present!'];\n        }\n    },\n};\n</script>\n\n<style scoped>\ninput {\n    position: relative;\n    text-transform: capitalize;\n}\n\ntable {\n    display: inline-block;\n    width: 69%;\n}\n</style>\n"],"sourceRoot":""}]}