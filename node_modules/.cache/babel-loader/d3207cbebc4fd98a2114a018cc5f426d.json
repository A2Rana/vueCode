{"remainingRequest":"/home/arana/Documents/vueCode/node_modules/babel-loader/lib/index.js!/home/arana/Documents/vueCode/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/home/arana/Documents/vueCode/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/arana/Documents/vueCode/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/arana/Documents/vueCode/src/views/Overheads/viewOverhead.vue?vue&type=template&id=6f62e683&scoped=true","dependencies":[{"path":"/home/arana/Documents/vueCode/src/views/Overheads/viewOverhead.vue","mtime":1616495000255},{"path":"/home/arana/Documents/vueCode/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/arana/Documents/vueCode/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/arana/Documents/vueCode/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/home/arana/Documents/vueCode/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/arana/Documents/vueCode/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCB0b0Rpc3BsYXlTdHJpbmcgYXMgX3RvRGlzcGxheVN0cmluZywgdk1vZGVsVGV4dCBhcyBfdk1vZGVsVGV4dCwgd2l0aERpcmVjdGl2ZXMgYXMgX3dpdGhEaXJlY3RpdmVzLCBjcmVhdGVUZXh0Vk5vZGUgYXMgX2NyZWF0ZVRleHRWTm9kZSwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCB3aXRoU2NvcGVJZCBhcyBfd2l0aFNjb3BlSWQsIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSI7Cgp2YXIgX3dpdGhJZCA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoImRhdGEtdi02ZjYyZTY4MyIpOwoKX3B1c2hTY29wZUlkKCJkYXRhLXYtNmY2MmU2ODMiKTsKCnZhciBfaG9pc3RlZF8xID0gewogICJmb3IiOiAiT3ZlcmhlYWQiCn07Cgp2YXIgX2hvaXN0ZWRfMiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCk7Cgp2YXIgX2hvaXN0ZWRfMyA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImJyIiwgbnVsbCwgbnVsbCwgLTEKLyogSE9JU1RFRCAqLwopOwoKX3BvcFNjb3BlSWQoKTsKCmV4cG9ydCB2YXIgcmVuZGVyID0gLyojX19QVVJFX18qL193aXRoSWQoZnVuY3Rpb24gKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHZhciBfY29tcG9uZW50X1RhYmxlID0gX3Jlc29sdmVDb21wb25lbnQoIlRhYmxlIik7CgogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfRnJhZ21lbnQsIG51bGwsIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9UYWJsZSwgewogICAgdGFibGVIZWFkZXJzOiAkZGF0YS50YWJsZUhlYWRlcnMsCiAgICBkYXRhOiAkZGF0YS5kYXRhCiAgfSwgbnVsbCwgOAogIC8qIFBST1BTICovCiAgLCBbInRhYmxlSGVhZGVycyIsICJkYXRhIl0pLCBfY3JlYXRlVk5vZGUoImgyIiwgX2hvaXN0ZWRfMSwgX3RvRGlzcGxheVN0cmluZygkZGF0YS5tc2cpLCAxCiAgLyogVEVYVCAqLwogICksIF93aXRoRGlyZWN0aXZlcyhfY3JlYXRlVk5vZGUoImlucHV0IiwgewogICAgIm9uVXBkYXRlOm1vZGVsVmFsdWUiOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRkYXRhLm92ZXJoZWFkTmFtZSA9ICRldmVudDsKICAgIH0pLAogICAgcGxhY2Vob2xkZXI6ICRkYXRhLm1lc3NhZ2UKICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIFsicGxhY2Vob2xkZXIiXSksIFtbX3ZNb2RlbFRleHQsICRkYXRhLm92ZXJoZWFkTmFtZV1dKSwgX2hvaXN0ZWRfMiwgX2hvaXN0ZWRfMywgX3dpdGhEaXJlY3RpdmVzKF9jcmVhdGVWTm9kZSgiaW5wdXQiLCB7CiAgICAib25VcGRhdGU6bW9kZWxWYWx1ZSI6IF9jYWNoZVsyXSB8fCAoX2NhY2hlWzJdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gJGRhdGEueWVhciA9ICRldmVudDsKICAgIH0pLAogICAgcGxhY2Vob2xkZXI6ICJFbnRlciB0aGUgeWVhci4uLiIKICB9LCBudWxsLCA1MTIKICAvKiBORUVEX1BBVENIICovCiAgKSwgW1tfdk1vZGVsVGV4dCwgJGRhdGEueWVhcl1dKSwgX2NyZWF0ZVZOb2RlKCJidXR0b24iLCB7CiAgICBvbkNsaWNrOiBfY2FjaGVbM10gfHwgKF9jYWNoZVszXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLmdldEZhY2lsaXR5KCk7CiAgICB9KQogIH0sICJHbyEhISIpXSwgNjQKICAvKiBTVEFCTEVfRlJBR01FTlQgKi8KICApOwp9KTs="},{"version":3,"sources":["/home/arana/Documents/vueCode/src/views/Overheads/viewOverhead.vue"],"names":[],"mappings":";;;;;;;AAEQ,SAAI;;;;;8BACgD,YAAA,CAAM,IAAN,EAAM,IAAN,EAAM,IAAN,EAAM,CAAA;AAAA;AAAN,C;;;;;;;sDAFxD,YAAA,CAAqE,gBAArE,EAAqE;AAAvD,IAAA,YAAY,EAAE,KAAA,CAAA,YAAyC;AAApB,IAAA,IAAI,EAAE,KAAA,CAAA;AAAc,GAArE,E,IAAA,E;;AAAA,I,wBAAA,C,EACA,YAAA,CAAiC,IAAjC,EAAA,UAAA,EAAiC,gBAAA,CAAX,KAAA,CAAA,GAAW,CAAjC,EAAyB;AAAA;AAAzB,G,kBACA,YAAA,CAAuD,OAAvD,EAAuD;;aAAvC,KAAA,CAAA,YAAA,GAAY,M;MAA2B;AAAxB,IAAA,WAAW,EAAE,KAAA,CAAA;AAAW,GAAvD,E,IAAA,E;;AAAA,I,eAAA,C,iBAAgB,KAAA,CAAA,Y,iBAAwC,U,kBACxD,YAAA,CAAwD,OAAxD,EAAwD;;aAAxC,KAAA,CAAA,IAAA,GAAI,M;MAAoC;AAAlC,IAAA,WAAW,EAAC;AAAsB,GAAxD,E,IAAA,E;;AAAA,G,iBAAgB,KAAA,CAAA,I,KAChB,YAAA,CAA6C,QAA7C,EAA6C;AAApC,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,aAAE,QAAA,CAAA,WAAA,EAAF;AAAA,KAAA;AAA+B,GAA7C,EAA+B,OAA/B,C","sourcesContent":["<template>\n    <Table v-bind:tableHeaders=\"tableHeaders\" v-bind:data=\"data\"></Table>\n    <h2 for=\"Overhead\">{{ msg }}</h2>\n    <input v-model=\"overheadName\" :placeholder=\"message\" /> <br />\n    <input v-model=\"year\" placeholder=\"Enter the year...\" />\n    <button @click=\"getFacility()\">Go!!!</button>\n</template>\n\n<script>\nimport Table from '@/components/Table';\n\nexport default {\n    name: 'ViewOverhead',\n    components: {\n        Table,\n    },\n    data() {\n        return {\n            data: [],\n            tableHeaders: [],\n            overheadName: '',\n            year: '',\n            msg: 'Filter expenses according to overhead:',\n            message: 'Enter Overhead Name',\n            url: 'https://fbc.exitest.com/overhead',\n        };\n    },\n    methods: {\n        async getData(url) {\n            const response = await fetch(url);\n            if (response.ok) {\n                const data = await response.json();\n                return data;\n            } else {\n                return console.log('HTTP-Error: ' + response.status);\n            }\n        },\n\n        async getFacility() {\n            console.log(this.overheadName, this.year);\n            this.data = Object.values(await this.getData(`${this.url}/facility=${this.overheadName}/expense/${this.year}`));\n            if (this.data.length) {\n                this.tableHeaders = Object.keys(this.data[0]);\n            } else {\n                this.tableHeaders = ['Data is not present!'];\n            }\n        },\n    },\n    async mounted() {\n        this.data = Object.values(await this.getData(this.url));\n        if (this.data.length) {\n            this.tableHeaders = Object.keys(this.data[0]);\n        } else {\n            this.tableHeaders = ['Data is not present!'];\n        }\n    },\n};\n</script>\n\n<style scoped>\ninput {\n    position: relative;\n    text-transform: capitalize;\n}\n\ntable {\n    display: inline-block;\n    width: 69%;\n}\n</style>\n"],"sourceRoot":""}]}