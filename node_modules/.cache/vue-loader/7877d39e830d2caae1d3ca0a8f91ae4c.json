{"remainingRequest":"/home/arana/Documents/vueCode/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/arana/Documents/vueCode/src/views/Expenses/calculateExpense.vue?vue&type=template&id=7d62a288&scoped=true","dependencies":[{"path":"/home/arana/Documents/vueCode/src/views/Expenses/calculateExpense.vue","mtime":1616495000255},{"path":"/home/arana/Documents/vueCode/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/arana/Documents/vueCode/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/arana/Documents/vueCode/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/home/arana/Documents/vueCode/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/arana/Documents/vueCode/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8VGFibGUgdi1pZj0ic2hvdyIgdi1iaW5kOnRhYmxlSGVhZGVycz0idGFibGVIZWFkZXJzIiB2LWJpbmQ6ZGF0YT0iZGF0YSI+PC9UYWJsZT4KICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0ieWVhciIgbmFtZT0iWWVhciIgcmVxdWlyZWQ9IiIgdi1tb2RlbD0ieWVhciIgcGxhY2Vob2xkZXI9IkVudGVyIFllYXIuLiIgLz4KICAgIDxiciAvPgogICAgPGlucHV0IHR5cGU9Im51bWJlciIgaWQ9InByb2ZpdCIgdi1tb2RlbD0icGVyIiBwbGFjZWhvbGRlcj0iUHJvZml0IFBlcmNlbnRhZ2UuLi4iPgogICAgPGJyIC8+CiAgICA8YnIgLz4KICAgIDxidXR0b24gQGNsaWNrPSJkb0NhbGN1bGF0aW9ucygpIj5HTyEhPC9idXR0b24+Cg=="},{"version":3,"sources":["/home/arana/Documents/vueCode/src/views/Expenses/calculateExpense.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChF,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAChG,CAAC,CAAC,EAAE,CAAC;IACL,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjF,CAAC,CAAC,EAAE,CAAC;IACL,CAAC,CAAC,EAAE,CAAC;IACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/arana/Documents/vueCode/src/views/Expenses/calculateExpense.vue","sourceRoot":"","sourcesContent":["<template>\n    <Table v-if=\"show\" v-bind:tableHeaders=\"tableHeaders\" v-bind:data=\"data\"></Table>\n    <input type=\"text\" id=\"year\" name=\"Year\" required=\"\" v-model=\"year\" placeholder=\"Enter Year..\" />\n    <br />\n    <input type=\"number\" id=\"profit\" v-model=\"per\" placeholder=\"Profit Percentage...\">\n    <br />\n    <br />\n    <button @click=\"doCalculations()\">GO!!</button>\n</template>\n\n<script>\nimport Table from '../../components/Table.vue';\n\nexport default {\n    name: 'Calculate Expense',\n    components: {\n        Table,\n    },\n    data() {\n        return {\n            data: [],\n            show: false,\n            year:'',\n            per:'',\n            tableHeaders: [],\n        };\n    },\n    methods: {\n        async getData(year, per) {\n            const response = await fetch(`https://fbc.exitest.com/employee/expenseDetails/year=${year}/profit=${per}`);\n            if (response.ok) {\n                const data = await response.json();\n                return Object.values(data);\n            } else {\n                return console.log('HTTP-Error: ' + response.status);\n            }\n        },\n        async doCalculations() {\n            this.data[0] = await this.getData(this.year, this.per);\n            this.tableHeaders = ['Total Expense'];\n            this.show = true;\n        },\n    },\n};\n</script>\n\n<style scoped>\ntable {\n    display: inline-block;\n    width: 26%;\n}\n</style>\n"]}]}