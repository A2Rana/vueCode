{"remainingRequest":"/home/arana/Documents/vueCode/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/arana/Documents/vueCode/src/views/Expenses/viewExpense.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/arana/Documents/vueCode/src/views/Expenses/viewExpense.vue","mtime":1616495000255},{"path":"/home/arana/Documents/vueCode/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/arana/Documents/vueCode/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/arana/Documents/vueCode/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/arana/Documents/vueCode/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBUYWJsZSBmcm9tICdAL2NvbXBvbmVudHMvVGFibGUudnVlJzsKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ1ZpZXcgRXhwZW5zZScsCiAgICBjb21wb25lbnRzOiB7CiAgICAgICAgVGFibGUsCiAgICB9LAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBkYXRhOiBbXSwKICAgICAgICAgICAgdGFibGVIZWFkZXJzOiBbXSwKICAgICAgICAgICAgeWVhckFycmF5OiBbXSwKICAgICAgICAgICAgc2VsZWN0ZWRZZWFyOiBudWxsLAogICAgICAgIH07CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGFzeW5jIGdldERhdGEocGFyYW0gPSAnJykgewogICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwczovL2ZiYy5leGl0ZXN0LmNvbS90b3RhbEV4cGVuc2UnICsgcGFyYW0pOwogICAgICAgICAgICBpZiAocmVzcG9uc2Uub2spIHsKICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7CiAgICAgICAgICAgICAgICByZXR1cm4gZGF0YTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJldHVybiBjb25zb2xlLmxvZygnSFRUUC1FcnJvcjogJyArIHJlc3BvbnNlLnN0YXR1cyk7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGFzeW5jIGNoYW5nZVllYXIoZXZlbnQpIHsKICAgICAgICAgICAgdGhpcy5zZWxlY3RlZFllYXIgPSBldmVudC50YXJnZXQub3B0aW9uc1tldmVudC50YXJnZXQub3B0aW9ucy5zZWxlY3RlZEluZGV4XS52YWx1ZTsKICAgICAgICAgICAgdGhpcy5kYXRhID0gT2JqZWN0LnZhbHVlcyhhd2FpdCB0aGlzLmdldERhdGEoJy8nICsgdGhpcy5zZWxlY3RlZFllYXIpKTsKICAgICAgICB9LAogICAgfSwKICAgIGFzeW5jIG1vdW50ZWQoKSB7CiAgICAgICAgdGhpcy5kYXRhID0gT2JqZWN0LnZhbHVlcyhhd2FpdCB0aGlzLmdldERhdGEoKSk7CiAgICAgICAgdGhpcy50YWJsZUhlYWRlcnMgPSBPYmplY3Qua2V5cyh0aGlzLmRhdGFbMF0pOwogICAgICAgIHRoaXMuZGF0YS5mb3JFYWNoKChpdGVtKSA9PiB0aGlzLnllYXJBcnJheS5wdXNoKGl0ZW0uWWVhcikpOwogICAgfSwKfTsK"},{"version":3,"sources":["/home/arana/Documents/vueCode/src/views/Expenses/viewExpense.vue"],"names":[],"mappings":"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","file":"/home/arana/Documents/vueCode/src/views/Expenses/viewExpense.vue","sourceRoot":"","sourcesContent":["<template>\n    <Table v-bind:tableHeaders=\"tableHeaders\" v-bind:data=\"data\"></Table>\n    <select @change=\"changeYear($event)\">\n        <option value=\"\" selected disabled>Select the year</option>\n        <option v-for=\"Year in yearArray\" :value=\"Year\" :key=\"Year\">{{ Year }}</option>\n    </select>\n</template>\n\n<script>\nimport Table from '@/components/Table.vue';\nexport default {\n    name: 'View Expense',\n    components: {\n        Table,\n    },\n    data() {\n        return {\n            data: [],\n            tableHeaders: [],\n            yearArray: [],\n            selectedYear: null,\n        };\n    },\n    methods: {\n        async getData(param = '') {\n            const response = await fetch('https://fbc.exitest.com/totalExpense' + param);\n            if (response.ok) {\n                const data = await response.json();\n                return data;\n            } else {\n                return console.log('HTTP-Error: ' + response.status);\n            }\n        },\n        async changeYear(event) {\n            this.selectedYear = event.target.options[event.target.options.selectedIndex].value;\n            this.data = Object.values(await this.getData('/' + this.selectedYear));\n        },\n    },\n    async mounted() {\n        this.data = Object.values(await this.getData());\n        this.tableHeaders = Object.keys(this.data[0]);\n        this.data.forEach((item) => this.yearArray.push(item.Year));\n    },\n};\n</script>\n\n<style scoped>\ntable {\n    display: inline-block;\n    width: 86%;\n}\n</style>\n"]}]}